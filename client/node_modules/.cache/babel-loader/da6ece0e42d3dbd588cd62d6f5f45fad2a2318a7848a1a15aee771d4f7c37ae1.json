{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juani\\\\Desktop\\\\Proyectos Programacion\\\\proyectos\\\\guard-schedule\\\\client\\\\src\\\\components\\\\schedule\\\\schedule.jsx\",\n  _s = $RefreshSig$();\nimport \"./schedule.scss\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport AddEventModal from \"../modal/modal\";\nimport { useState, useRef /*useEffect*/ } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  //const [events, setEvents] = useState([]);\n  const calendarRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Traigo tipo de calendario del usuario desde el Token\n  const calendarType = Cookies.get('calendar');\n\n  // Traigo el \"Evento\" según el calendario del usuario\n  /*useEffect(() => {\r\n    const getEvents = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/events/${calendarType}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${Cookies.get('token')}`,\r\n          },\r\n        });\r\n          if (response.ok) {\r\n          const eventsData = await response.json();\r\n          setEvents(eventsData);\r\n        } else {\r\n          console.error(\"Error al obtener eventos\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n      getEvents();\r\n  }, [calendarType]);*/\n\n  // Agregar Evento\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent(event);\n    if (event.date && event.calendar) {\n      saveEventToDatabase(event);\n    } else {\n      console.error(\"Error: Date and calendar are required fields\");\n    }\n  };\n\n  // Función para guardar el evento en la base de datos\n  const saveEventToDatabase = async event => {\n    try {\n      console.log(\"Token:\", Cookies.get('token'));\n      const response = await fetch('http://localhost:8000/api/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${Cookies.get('token')}`\n        },\n        body: JSON.stringify({\n          title: event.title,\n          date: event.start && typeof event.start.toISOString === 'function' ? event.start.toISOString() : event.start,\n          calendar: calendarType\n        })\n      });\n      if (response.ok) {\n        console.log(\"Evento guardado en la base de datos\");\n      } else {\n        console.error(\"Error al guardar el evento en la base de datos\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Logout\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/logout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log(\"Cierre de sesión exitoso\");\n        navigate('/');\n      } else {\n        console.error(\"Error al cerrar sesión\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule\",\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      weekNumberCalculation: \"ISO\",\n      locale: \"es\",\n      height: 600,\n      headerToolbar: {\n        left: \"Add\",\n        center: \"title\",\n        right: \"today prev,next CloseSesion\"\n      },\n      weekNumbersWithinDays: 5,\n      customButtons: {\n        Add: {\n          text: \"Agregar Guardia\",\n          click: () => setModalOpen(true)\n        },\n        CloseSesion: {\n          text: \"Cerrar Sesion\",\n          click: () => handleLogout(true)\n        }\n      }\n      //events={events} // Muestro evento según tipo de calendario\n      ,\n      eventContent: ({\n        event\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"OuIeaNJjsS+7YS46+xfhSNKRiV4=\", false, function () {\n  return [useNavigate];\n});\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["FullCalendar","dayGridPlugin","AddEventModal","useState","useRef","useNavigate","Cookies","jsxDEV","_jsxDEV","Schedule","_s","modalOpen","setModalOpen","calendarRef","navigate","calendarType","get","onEventAdded","event","calendarApi","current","getApi","addEvent","date","calendar","saveEventToDatabase","console","error","log","response","fetch","method","headers","body","JSON","stringify","title","start","toISOString","ok","handleLogout","className","children","ref","plugins","initialView","weekNumberCalculation","locale","height","headerToolbar","left","center","right","weekNumbersWithinDays","customButtons","Add","text","click","CloseSesion","eventContent","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Juani/Desktop/Proyectos Programacion/proyectos/guard-schedule/client/src/components/schedule/schedule.jsx"],"sourcesContent":["import \"./schedule.scss\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport AddEventModal from \"../modal/modal\";\r\nimport { useState, useRef, /*useEffect*/ } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Schedule = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  //const [events, setEvents] = useState([]);\r\n  const calendarRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Traigo tipo de calendario del usuario desde el Token\r\n  const calendarType = Cookies.get('calendar');\r\n\r\n  // Traigo el \"Evento\" según el calendario del usuario\r\n  /*useEffect(() => {\r\n    const getEvents = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/events/${calendarType}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${Cookies.get('token')}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const eventsData = await response.json();\r\n          setEvents(eventsData);\r\n        } else {\r\n          console.error(\"Error al obtener eventos\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    getEvents();\r\n  }, [calendarType]);*/\r\n\r\n  // Agregar Evento\r\n  const onEventAdded = (event) => {\r\n    let calendarApi = calendarRef.current.getApi();\r\n    calendarApi.addEvent(event);\r\n\r\n    \r\n    if (event.date && event.calendar) {\r\n      saveEventToDatabase(event);\r\n    } else {\r\n      console.error(\"Error: Date and calendar are required fields\");\r\n    }\r\n  \r\n  };\r\n\r\n  // Función para guardar el evento en la base de datos\r\n  const saveEventToDatabase = async (event) => {\r\n    try {\r\n      console.log(\"Token:\", Cookies.get('token'));\r\n      const response = await fetch('http://localhost:8000/api/events', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${Cookies.get('token')}`,\r\n        },\r\n        body: JSON.stringify({\r\n          title: event.title,\r\n          date: event.start && typeof event.start.toISOString === 'function' ? event.start.toISOString() : event.start,\r\n          calendar: calendarType,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Evento guardado en la base de datos\");\r\n      } else {\r\n        console.error(\"Error al guardar el evento en la base de datos\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  // Logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Cierre de sesión exitoso\");\r\n        navigate('/');\r\n      } else {\r\n        console.error(\"Error al cerrar sesión\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule\">\r\n      <FullCalendar\r\n        ref={calendarRef}\r\n        plugins={[dayGridPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        weekNumberCalculation=\"ISO\"\r\n        locale=\"es\"\r\n        height={600}\r\n        headerToolbar={{\r\n          left: \"Add\",\r\n          center: \"title\",\r\n          right: \"today prev,next CloseSesion\",\r\n        }}\r\n        weekNumbersWithinDays={5}\r\n        customButtons={{\r\n          Add: {\r\n            text: \"Agregar Guardia\",\r\n            click: () => setModalOpen(true),\r\n          },\r\n          CloseSesion: {\r\n            text: \"Cerrar Sesion\",\r\n            click: () => handleLogout(true),\r\n          }\r\n        }}\r\n        //events={events} // Muestro evento según tipo de calendario\r\n        eventContent={({ event }) => (\r\n          <div>\r\n            <b>{event.title}</b>\r\n          </div>\r\n        )}\r\n      />\r\n\r\n      <AddEventModal\r\n        isOpen={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        onEventAdded={(event) => onEventAdded(event)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}